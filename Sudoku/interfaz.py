import pygame
import Sudoku.Solu as sol
import Sudoku.sudos as su
import copy


pygame.font.init()
screen = pygame.display.set_mode((502, 502))
dif = 500 / 9
dif2 = 440 / 5
Sudokus = [[[[4, 0, 7, 1, 0, 0, 0, 0, 3], [0, 1, 0, 0, 0, 3, 7, 5, 4], [0, 0, 0, 0, 7, 4, 9, 2, 0], [8, 0, 0, 7, 6, 0, 0, 0, 0], [9, 0, 5, 0, 0, 0, 8, 0, 6], [0, 0, 0, 0, 4, 5, 0, 0, 2], [0, 7, 3, 5, 2, 0, 0, 0, 0], [2, 6, 4, 3, 0, 0, 0, 1, 0], [5, 0, 0, 0, 0, 6, 2, 0, 7]], [[8, 6, 0, 0, 0, 0, 0, 0, 7], [0, 0, 4, 7, 2, 0, 1, 0, 0], [0, 0, 3, 9, 0, 0, 4, 8, 0], [0, 4, 8, 0, 0, 0, 0, 0, 5], [9, 2, 0, 0, 0, 0, 0, 1, 8], [1, 0, 0, 0, 0, 0, 6, 9, 0], [0, 3, 1, 0, 0, 9, 2, 0, 0], [0, 0, 5, 0, 6, 3, 8, 0, 0], [6, 0, 0, 0, 0, 0, 0, 3, 1]], [[7, 0, 0, 0, 5, 0, 1, 0, 6], [0, 8, 0, 0, 0, 3, 2, 5, 0], [0, 0, 6, 7, 1, 0, 0, 0, 8], [0, 4, 2, 0, 8, 5, 0, 0, 0], [1, 0, 3, 0, 0, 0, 8, 0, 5], [0, 0, 0, 2, 7, 0, 3, 6, 0], [2, 0, 0, 0, 6, 8, 5, 0, 0], [0, 6, 5, 1, 0, 0, 0, 4, 0], [9, 0, 4, 0, 3, 0, 0, 0, 2]], [[0, 9, 0, 7, 0, 0, 6, 0, 0], [0, 1, 5, 0, 8, 0, 0, 0, 7], [8, 0, 6, 4, 3, 0, 0, 1, 9], [0, 6, 4, 0, 0, 0, 0, 0, 0], [0, 2, 0, 5, 1, 4, 0, 9, 0], [0, 0, 0, 0, 0, 0, 1, 7, 0], [5, 4, 0, 0, 7, 3, 8, 0, 1], [2, 0, 0, 0, 6, 0, 9, 4, 0], [0, 0, 1, 0, 0, 5, 0, 3, 0]], [[0, 4, 0, 2, 0, 0, 0, 0, 9], [9, 8, 7, 0, 6, 1, 4, 3, 0], [0, 0, 0, 0, 0, 0, 0, 8, 0], [0, 0, 0, 1, 0, 0, 6, 4, 0], [2, 6, 0, 7, 0, 5, 0, 9, 3], [0, 5, 1, 0, 0, 9, 0, 0, 0], [0, 3, 0, 0, 0, 0, 0, 0, 0], [0, 1, 9, 3, 5, 0, 8, 2, 4], [5, 0, 0, 0, 0, 2, 0, 1, 0]]], [[[3, 1, 0, 0, 0, 5, 6, 0, 0], [6, 0, 5, 8, 0, 7, 0, 0, 0], [0, 2, 9, 6, 0, 3, 0, 5, 0], [0, 3, 8, 0, 0, 0, 4, 1, 0], [0, 0, 0, 3, 0, 1, 0, 0, 0], [0, 6, 2, 0, 0, 0, 9, 3, 0], [0, 5, 0, 4, 0, 6, 8, 9, 0], [0, 0, 0, 9, 0, 2, 3, 0, 6], [0, 0, 6, 1, 0, 0, 0, 7, 5]], [[1, 0, 0, 6, 9, 0, 3, 5, 0], [0, 2, 0, 0, 8, 0, 0, 4, 6], [0, 0, 7, 5, 0, 0, 1, 0, 0], [2, 0, 0, 0, 0, 6, 8, 0, 0], [8, 3, 0, 7, 0, 2, 0, 9, 1], [0, 0, 9, 3, 0, 0, 0, 0, 7], [0, 0, 3, 0, 0, 1, 5, 0, 0], [7, 1, 0, 0, 3, 0, 0, 6, 0], [0, 8, 6, 0, 7, 9, 0, 0, 3]], [[4, 0, 3, 6, 0, 5, 7, 0, 0], [5, 0, 0, 0, 1, 0, 0, 0, 3], [0, 6, 2, 7, 0, 0, 0, 0, 0], [9, 0, 4, 0, 7, 0, 1, 0, 6], [0, 2, 0, 0, 0, 0, 0, 5, 0], [6, 0, 8, 0, 5, 0, 9, 0, 2], [0, 0, 0, 0, 0, 8, 6, 3, 0], [3, 0, 0, 0, 9, 0, 0, 0, 8], [0, 0, 9, 3, 0, 2, 5, 0, 7]], [[1, 7, 0, 0, 0, 2, 8, 0, 0], [4, 0, 9, 0, 0, 0, 0, 0, 0], [0, 3, 0, 8, 6, 7, 9, 4, 1], [0, 0, 0, 0, 3, 9, 0, 0, 0], [9, 1, 0, 7, 0, 8, 0, 6, 2], [0, 0, 0, 6, 4, 0, 0, 0, 0], [6, 9, 7, 3, 8, 5, 0, 1, 0], [0, 0, 0, 0, 0, 0, 5, 0, 6], [0, 0, 5, 1, 0, 0, 0, 9, 3]], [[2, 0, 6, 0, 8, 3, 0, 5, 0], [0, 7, 0, 1, 0, 2, 8, 3, 0], [0, 3, 8, 0, 0, 5, 0, 0, 0], [7, 5, 0, 4, 0, 0, 0, 0, 0], [6, 0, 0, 5, 0, 8, 0, 0, 9], [0, 0, 0, 0, 0, 9, 0, 1, 5], [0, 0, 0, 8, 0, 0, 3, 2, 0], [0, 9, 2, 3, 0, 4, 0, 7, 0], [0, 4, 0, 2, 5, 0, 9, 0, 1]]], [[[0, 8, 0, 2, 0, 1, 6, 0, 0], [0, 0, 0, 0, 0, 6, 4, 8, 0], [3, 0, 0, 0, 4, 8, 0, 0, 7], [7, 0, 6, 3, 1, 4, 5, 0, 0], [0, 0, 0, 6, 0, 7, 0, 0, 0], [0, 0, 1, 8, 5, 9, 7, 0, 6], [5, 0, 0, 7, 6, 0, 0, 0, 1], [0, 4, 3, 1, 0, 0, 0, 0, 0], [0, 0, 8, 4, 0, 2, 0, 6, 0]], [[0, 9, 1, 5, 0, 0, 0, 0, 6], [0, 7, 6, 8, 9, 0, 5, 0, 0], [0, 0, 0, 6, 0, 0, 4, 0, 7], [9, 6, 0, 0, 4, 0, 7, 0, 0], [0, 5, 0, 2, 0, 8, 0, 6, 0], [0, 0, 7, 0, 6, 0, 0, 1, 3], [5, 0, 9, 0, 0, 1, 0, 0, 0], [0, 0, 4, 0, 5, 6, 1, 8, 0], [6, 0, 0, 0, 0, 9, 3, 4, 0]], [[0, 0, 3, 0, 1, 9, 8, 0, 0], [0, 4, 6, 0, 0, 7, 0, 5, 9], [0, 0, 0, 0, 0, 0, 4, 0, 0], [2, 8, 0, 9, 4, 0, 0, 6, 0], [0, 9, 5, 0, 8, 0, 1, 3, 0], [0, 6, 0, 0, 7, 1, 0, 2, 8], [0, 0, 7, 0, 0, 0, 0, 0, 0], [4, 1, 0, 3, 0, 0, 5, 8, 0], [0, 0, 9, 7, 2, 0, 3, 0, 0]], [[0, 0, 7, 0, 2, 0, 8, 6, 0], [0, 0, 0, 0, 1, 3, 2, 0, 0], [0, 2, 0, 8, 0, 0, 9, 1, 0], [2, 0, 0, 0, 5, 7, 3, 0, 0], [9, 7, 0, 0, 0, 0, 0, 2, 5], [0, 0, 3, 1, 4, 0, 0, 0, 9], [0, 4, 9, 0, 0, 1, 0, 3, 0], [0, 0, 2, 3, 9, 0, 0, 0, 0], [0, 3, 6, 0, 7, 0, 1, 0, 0]], [[2, 0, 0, 0, 5, 0, 8, 0, 0], [1, 5, 4, 0, 0, 0, 0, 2, 0], [0, 6, 0, 0, 1, 9, 0, 7, 5], [0, 0, 0, 8, 3, 5, 0, 0, 2], [0, 2, 0, 1, 0, 6, 0, 8, 0], [5, 0, 0, 9, 4, 2, 0, 0, 0], [9, 7, 0, 3, 6, 0, 0, 5, 0], [0, 4, 0, 0, 0, 0, 1, 9, 6], [0, 0, 2, 0, 9, 0, 0, 0, 4]]], [[[0, 0, 5, 0, 0, 0, 7, 0, 1], [0, 8, 0, 0, 7, 4, 0, 0, 9], [0, 9, 2, 0, 0, 8, 0, 0, 6], [8, 0, 4, 0, 9, 7, 2, 6, 5], [0, 0, 0, 0, 0, 0, 0, 0, 0], [2, 3, 7, 1, 6, 0, 8, 0, 4], [5, 0, 0, 4, 0, 0, 9, 1, 0], [1, 0, 0, 7, 5, 0, 0, 3, 0], [9, 0, 8, 0, 0, 0, 6, 0, 0]], [[0, 0, 2, 0, 8, 9, 0, 4, 0], [0, 3, 0, 7, 0, 0, 0, 0, 0], [1, 0, 0, 0, 4, 0, 6, 2, 0], [0, 0, 0, 8, 9, 0, 1, 7, 5], [7, 8, 5, 0, 0, 0, 9, 6, 2], [9, 1, 6, 0, 5, 7, 0, 0, 0], [0, 4, 1, 0, 6, 0, 0, 0, 3], [0, 0, 0, 0, 0, 5, 0, 1, 0], [0, 5, 0, 4, 1, 0, 8, 0, 0]], [[6, 0, 0, 5, 0, 0, 8, 7, 0], [0, 5, 7, 6, 0, 0, 9, 0, 0], [0, 4, 0, 0, 0, 7, 0, 0, 5], [0, 0, 8, 4, 0, 0, 2, 3, 7], [7, 0, 0, 8, 0, 2, 0, 0, 9], [2, 1, 5, 0, 0, 3, 6, 0, 0], [3, 0, 0, 9, 0, 0, 0, 5, 0], [0, 0, 6, 0, 0, 5, 7, 2, 0], [0, 8, 2, 0, 0, 4, 0, 0, 6]], [[1, 0, 9, 0, 4, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 3, 0, 6], [3, 6, 0, 7, 8, 0, 0, 2, 4], [0, 0, 0, 0, 0, 0, 0, 9, 2], [7, 9, 0, 8, 1, 2, 0, 3, 5], [4, 8, 0, 0, 0, 0, 0, 0, 0], [6, 7, 0, 0, 5, 8, 0, 4, 9], [2, 0, 8, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 3, 0, 5, 0, 7]], [[6, 4, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 3, 0, 5, 7, 0], [0, 9, 3, 4, 7, 0, 0, 0, 0], [2, 5, 4, 8, 9, 0, 0, 6, 0], [0, 0, 0, 6, 0, 3, 0, 0, 0], [0, 6, 0, 0, 1, 5, 7, 4, 9], [0, 0, 0, 0, 8, 4, 2, 1, 0], [0, 7, 5, 0, 2, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 8, 5]]]]
sudoku0 = 0
x = 0
y = 0
num = 0
font2 = pygame.font.SysFont("comicsans", 80, italic=True)
font1 = pygame.font.SysFont("comicsans", 60, italic=True)
font = pygame.font.SysFont("comicsans", 50, italic=True)


def dibu(sudok):
    for i in range(9):
        for j in range(9):
            if sudok[i][j] != 0:
                text = font.render(str(sudok[i][j]), True, (0, 0, 0))
                screen.blit(text, (i * dif + 15, j * dif + 15))

    for i in range(10):
        if i % 3 == 0:
            gr = 5
        else:
            gr = 1
        pygame.draw.line(screen, (0, 0, 0), (0, i * dif), (500, i * dif), gr)
        pygame.draw.line(screen, (0, 0, 0), (i * dif, 0), (i * dif, 500), gr)


def dibu2():
    o = 1
    pos = pygame.mouse.get_pos()
    for i in range(4):
        for j in range(5):
            if 10 + j * (10 + dif2) < pos[0] < 10 + j * (10 + dif2)+dif2 and 10 + i * (10 + dif2) < pos[1] < 10 + i * (10 + dif2)+dif2:
                a, b = i, j
                pygame.draw.rect(screen, (19, 83, 162), [10 + j * (10 + dif2), 10 + i * (10 + dif2), dif2, dif2])
                text = font1.render(str(o), True, (0, 0, 0))
                screen.blit(text, (10 + j * (10 + dif2) + dif2 / 4, 10 + i * (10 + dif2) + dif2 / 4))

            else:
                pygame.draw.rect(screen, (150, 219, 52), [10 + j * (10 + dif2), 10 + i * (10 + dif2), dif2, dif2])
                text = font1.render(str(o), True, (0, 0, 0))
                screen.blit(text, (10 + j * (10 + dif2) + dif2 / 4, 10 + i * (10 + dif2) + dif2 / 4))
            o += 1

    if 20 + dif2 < pos[0] < 20 + dif2 + 20 + 3*dif2 and 50 + 4*dif2 < pos[1] < 50 + 4*dif2 + dif2:
        a, b = 7, 7
        pygame.draw.rect(screen, (19, 83, 162), [20 + dif2, 50 + 4*dif2, 20 + 3*dif2, dif2])
        text = font2.render("Nuevo", True, (0, 0, 0))
        screen.blit(text, (30 + dif2 + dif2/2, 50 + 4*dif2 + dif2/4))
    else:
        pygame.draw.rect(screen, (150, 219, 52), [20 + dif2, 50 + 4 * dif2, 20 + 3 * dif2, dif2])
        text = font2.render("Nuevo", True, (0, 0, 0))
        screen.blit(text, (30 + dif2 + dif2 / 2, 50 + 4 * dif2 + dif2 / 4))

    for ev in pygame.event.get():
        if ev.type == pygame.MOUSEBUTTONDOWN:
            global c
            global sudoku0
            if (a, b) == (7, 7):
                sudoku0 = su.sudo()
            else:
                sudoku0 = Sudokus[a][b]
            c = 1


def coord(poss):
    global x
    global y
    x = int(poss[0]/dif)
    y = int(poss[1]/dif)


def celda():
    for i in range(2):
        pygame.draw.line(screen, (0, 0, 200), (x * dif-3, (y + i)*dif), (x * dif + dif + 3, (y + i)*dif), 5)
        pygame.draw.line(screen, (0, 0, 200), ( (x + i)* dif, y * dif ), ((x + i) * dif, y * dif + dif), 5)


c = 0
run = True
while run:
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            run = False
        if event.type == pygame.MOUSEBUTTONDOWN:
            pos = pygame.mouse.get_pos()
            coord(pos)
        if event.type == pygame.KEYDOWN:
            if event.key == pygame.K_RETURN:
                sudoku = sol.solu(sudoku0)
            if event.key == pygame.K_1:
                num = 1
            if event.key == pygame.K_2:
                num = 2
            if event.key == pygame.K_3:
                num = 3
            if event.key == pygame.K_4:
                num = 4
            if event.key == pygame.K_5:
                num = 5
            if event.key == pygame.K_6:
                num = 6
            if event.key == pygame.K_7:
                num = 7
            if event.key == pygame.K_8:
                num = 8
            if event.key == pygame.K_9:
                num = 9
    if c > 0:
        if c == 1:
            sudoku = copy.deepcopy(sudoku0)
            c += 1
        screen.fill((255, 255, 255))
        if num != 0:
            sudoku[x][y] = num
            num = 0
        dibu(sudoku)
        celda()
    elif c == 0:
        screen.fill((95, 183, 164))
        dibu2()

    pygame.display.update()
pygame.quit()

